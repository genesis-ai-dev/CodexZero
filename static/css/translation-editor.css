/* Translation Editor Styles - Ultra Simplified */

/* Stop page scrolling, let content scroll */
body.translation-page {
    overflow: hidden;
    height: 100vh;
}

/* Ensure text workspace has proper height constraints */
#text-workspace {
    height: calc(100vh - 120px); /* Account for header and padding */
    min-height: 0;
}

/* Text areas should fill available height but not exceed it */
#primary-text-area,
#secondary-texts-area {
    height: 100%;
    min-height: 0;
}

/* Containers within text areas should be constrained */
#primary-text-container,
#secondary-texts-container {
    height: 100%;
    min-height: 0;
    display: flex;
    flex-direction: column;
    overflow: hidden; /* Prevent any overflow at this level */
}

/* Make text content areas properly flexible and scrollable */
/* Text window containers should be height-constrained */
[data-window-id], 
[data-text-id] {
    height: 100%;
    max-height: 100%;
    min-height: 0;
    display: flex;
    flex-direction: column;
}

[data-window-content] {
    flex: 1 1 auto;
    min-height: 0; /* Critical for flex containers to allow scrolling */
    height: 0; /* Force it to respect flex instead of content */
    overflow-y: auto;
    overflow-x: hidden;
}

/* Basic dropdown styling */
.dropdown-option {
    padding: 0.5rem 1rem;
    border-bottom: 1px solid #e5e7eb;
}

.dropdown-option:hover {
    background-color: #f8fafc;
}

/* Dropdown containers */
[id$="-dropdown"] {
    background: white;
    border: 1px solid #e5e7eb;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    max-height: 200px;
    overflow-y: auto;
}




/* Auto-resize textareas */
.auto-resize-textarea {
    resize: none;
    min-height: 60px;
    overflow: hidden;
    box-sizing: border-box;
    transition: height 0.1s ease-out;
}

/* Simple textarea styling - only apply to textareas without auto-resize */
textarea:not(.auto-resize-textarea) {
    resize: vertical;
    width: 100%;
    min-height: 80px;
}

textarea:focus {
    outline: 2px solid #3b82f6;
    outline-offset: -2px;
}

/* Drag and drop feedback */
.verse-collected {
    opacity: 0.5;
    border-style: dashed !important;
}

.drop-target-hint {
    border: 2px solid #10b981 !important;
    background-color: #f0fdf4 !important;
}

/* Mobile adjustments */
@media (max-width: 767px) {
    #text-workspace {
        height: calc(100vh - 80px); /* Smaller header on mobile */
    }
    
    [data-window-content] {
        /* Keep flex behavior on mobile too */
        flex: 1;
        min-height: 0;
        max-height: 100%;
    }
    
    .translation-sidebar {
        width: 80vw;
    }
    
    textarea {
        font-size: 16px; /* Prevent zoom on iOS */
    }
}

/* Ensure verse cells don't break scrolling */
.verse-cell {
    flex-shrink: 0; /* Don't shrink verse cells */
    max-width: 100%; /* But constrain width */
}

/* Clean scrollbars */
[data-window-content]::-webkit-scrollbar {
    width: 8px;
}

[data-window-content]::-webkit-scrollbar-thumb {
    background: #cbd5e0;
    border-radius: 4px;
}

[data-window-content]::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
}

/* Line clamp utility for flag modal */
.line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

/* Header Search Styles */
.search-input {
    transition: all 0.2s ease;
}

.search-input:focus {
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    padding: 4px 8px;
    margin: -4px -8px;
}

.search-btn:hover {
    color: #3b82f6;
}

.clear-search-btn:hover {
    color: #374151;
}

/* Resize Handle Styles */
.resize-handle {
    width: 8px; /* Increased from 4px for easier grabbing */
    min-width: 8px; /* Ensure it maintains width in flexbox */
    background: #e5e7eb; /* Slightly lighter gray for visibility */
    cursor: col-resize;
    position: relative;
    transition: background-color 0.2s ease;
    flex-shrink: 0;
    flex-grow: 0;
    z-index: 10;
    /* Add hover area for easier grabbing */
    margin: 0 -2px; /* Negative margin to not affect layout but increase hit area */
    padding: 0 2px; /* Compensate with padding */
}

/* Desktop-specific positioning */
@media (min-width: 768px) {
    #text-workspace .resize-handle {
        display: block;
        height: 100%; /* Full height of container */
    }
    
    /* Ensure proper flex layout on desktop */
    #text-workspace {
        flex-direction: row !important;
    }
    
    /* Remove the border from secondary area when resize handle is present */
    #secondary-texts-area {
        border-right: none !important;
    }
}

.resize-handle:hover {
    background: #9ca3af; /* Darker gray on hover */
}

.resize-handle:active,
.resize-handle.dragging {
    background: #3b82f6;
}

/* Visual indicator */
.resize-handle::after {
    content: '⋮⋮';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #6b7280;
    font-size: 14px;
    line-height: 1;
}

/* Disable text selection during resize */
.resizing {
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
}

/* Hide resize handle on mobile */
@media (max-width: 767px) {
    .resize-handle {
        display: none;
    }
}

 